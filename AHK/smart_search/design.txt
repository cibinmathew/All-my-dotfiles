search term supports alias like
uppercase;caps;big letters
hkeys to cycle though previous executed actions and send the result

cmd ipconfig
smart action text uppercase
smart action text xml to csv
smart action calc lines*2.5


hk for smart action::
	1)tex xml; on enter becomes text xml to csv and show a preview tooltip of result;on enter copies/send the result
	2) already has text xml to csv on input and is selected; on HK remove last word by word; then cal; enter ; calc; calc lin;enter makes;
	calc lines; calc lines*4.5; on typing shows preview; on enter copies / send the result
	3) cmd ipconfig; on typing shows cmd; on enter
	4)calc decimal to; shows calc decimal to hex=0x675, decimal to oct=9898 as rows 

keyword search(search term):
	if no valid keywords are in the beginning:
		* if it matches starting of any keyword
		* if it matches something of keyword plus sub category or sub category alone
		* if it matches above plus function name with argument; argument wil be like regex; 
		eg: calc lines(\d+)
		eg: cmd (.*) in cmd ipconfig
	* matches all regex patterns
	if some valid keywords are selected:
		check oly in the last sub category specified
		then return those from all keyword categories

return:
* row by row csv
eg; main title(meaningfull function name),main category,sub category;further categories if any;action type; action script filename
    xml to csv;convert xml to csv;other aliases,text,text;xml;xml to csv,xml_functions.py

keyword_search_db;csv or xml database
	main category,sub,sub....,main titles,all aliases,sample description , sample output sample tooltip preview(by default without any processing),

api input:
	category1>category2>....category n>function_name with arguments>input text
	eg:
	calc> lines*2 >selected text
	text>xml to json>clipboardtext